# This file compiles to package.json scripts.
# When you add or modify anything, you *MUST* run:
#      npm run yamscripts
# to compile your changes.

scripts:

# once: Build/serve the assets and run the add-on
  once: =>bundle && =>firefox

  clean: rimraf data/content/* && mkdirp data/content

  changelog: conventional-changelog -i CHANGELOG.md -s

  copyTestImages: cpx "node_modules/tippy-top-sites/images/**/*" data/content/favicons/images

  copyTopSitesJson: cpx "node_modules/tippy-top-sites/top_sites.json" data/content/favicons

# bundle: Bundle assets for production
  bundle:
    pre: =>clean && =>copyTestImages && =>copyTopSitesJson
    static: cpx "content-src/static/**/*" data/content
    webpack: NODE_ENV=production webpack
    webpackAddon: webpack --config webpack.addon.config.js
    css: node-sass content-src/main.scss -o data/content
    html: node ./bin/generate-html.js > data/content/activity-streams.html
    post: du -hs ./data/content/*

# start: Start watching/compiling assets,
  start:
    _parallel: true
    pre: =>clean && =>copyTestImages && =>copyTopSitesJson
    static: =>bundle:static -- -w
    webpack: webpack -w
    webpackAddon: =>bundle:webpackAddon -- -w
    css: =>bundle:css && =>bundle:css -- -w
    html: =>bundle:html -- --baseUrl http://localhost:1963/ --csp off
    server: live-server data/content --port=1963 --no-browser

# firefox: Launch addon with jpm run
  firefox: =>bundle:webpackAddon && jpm run --prefs ./dev-prefs.json

# test: Run all tests once
  test:
    pre: =>bundle && =>copyTestImages && =>copyTopSitesJson
    # test:lint: Run eslint
    lint: eslint . && jscs . && sass-lint -v -q
    checkbinary: echo "JPM_FIREFOX_BINARY: ${JPM_FIREFOX_BINARY}"
    # test:jpm: Run jpm tests
    jpm: jpm test -b ${JPM_FIREFOX_BINARY:-"firefox"} --prefs ./test-prefs.json -v
    # test:karma: Run content tests only
    karma: NODE_ENV=test karma start
    post: cat logs/reports/coverage/text-summary.txt

# tdd: Run content tests continuously
  tdd: =>test:karma -- --no-single-run --browsers Chrome

# package: Build add-on
  package: =>bundle && jpm xpi && mv @activity-streams-$npm_package_version.xpi dist/activity-streams-$npm_package_version.xpi

  # This is for ci
  travis: =>test

  # This is just to make sure we don't make commits with failing tests
  # or uncompiled yamscripts.yml. Run automatically with husky.
  prepush: =>test:lint && =>yamscripts

  # chrome: Build for chrome extension
  cleanChrome: rimraf addon-chrome/content/* && mkdirp addon-chrome/content

  copyTestImagesChrome: cpx "node_modules/tippy-top-sites/images/**/*" addon-chrome/content/favicons/images

  copyTopSitesJsonChrome: cpx "node_modules/tippy-top-sites/top_sites.json" addon-chrome/content/favicons

  chrome:
    pre: npm run cleanChrome && npm run copyTestImagesChrome && npm run copyTopSitesJsonChrome
    bundleChrome: cpx "content-src/static/**/*" addon-chrome/content && node-sass content-src/main.scss -o addon-chrome/content && node ./addon-chrome/bin/generate-chrome-html.js > addon-chrome/content/activity-streams.html && webpack --config webpack.chrome.config.js
    postChrome: du -hs ./addon-chrome/content/*

  analyze: rimraf report && mkdirp report && plato -r -d report -l .jshintrc -t "Activity Stream Chrome Extension" -x "addon-chrome/content|addon-chrome/bin" addon-chrome
